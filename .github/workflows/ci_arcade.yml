name: GitHub Actions Arcade
run-name: ${{ github.actor }} is using GitHub Actions ðŸš€
on: [push]

jobs:
  Repository-Undesired-Files-Check:
    name: Check for undesired files (temp, binary, valgrind, cmake files, etc...)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Scan files
      run: |
        arr=($(find . \( -name "#*#" -o -name "*~" \
        -o -name "*.o" -o -name "*.a" \
        -o -name "*.so" -o -name "*.gcno" -o -name "*.gcda" -o -name "*.gcov" \
        -o -path '*tmp/*' \
        -o -name "Dockerfile" \
        -o -name "build" \
        -o -name "CMakeCache.txt" \
        -o -name "cmake_install.cmake" \
        -o -name "CMakeFiles" \
        -o -name "MakeFile" \
        -o -name "CMakeLists.txt.user" \
        -o -name "CMakeCache.txt" \
        -o -name "CMakeFiles" \
        -o -name "CMakeScripts" \
        -o -name "Makefile" \
        -o -name "compile_commands.json" \
        -o -name "CTestTestfile.cmake" \
        -o -name "_deps" \
        -o -name ".cmake" \
        -o -name ".vscode" \
        -o -name ".idea" \
        -o -name ".dockerignore" \
        -o -name ".cache" \
        \)))
        for i in ${arr[@]}; do echo "::error file=$i,line=1,endLine=1,title=Unwanted file detected::$i"; done
        if ((${#arr[@]})); then
          exit 1
        fi

  Push-From-Mirroring-To-Target-Repository:
    name: Push from mirroring to target repository
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    needs: Project-Compilation
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            git@github.com:EpitechPromo2026/B-OOP-400-BDX-4-1-arcade-leopold.sallan-gemard.git
          ssh_private_key:
            ${{ secrets.SSH_PRIVATE_KEY }}

  Project-Compilation:
    name: Compilation of the project via CMake
    runs-on: ubuntu-latest
    needs: Repository-Undesired-Files-Check
    container:
      image: epitechcontent/epitest-docker:latest
    steps:
      - uses: actions/checkout@v3
      with:
        fetch-depth: 0
      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build
      - name: Build
        run: cmake --build ${{github.workspace}}/build